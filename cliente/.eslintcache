[{"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/index.js":"1","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/reportWebVitals.js":"2","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Routing.js":"3","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/navBar.js":"4","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/main.js":"5","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/libros.js":"6","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/editoriales.js":"7","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/autores.js":"8","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/almacenes.js":"9","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/librosAlmacen.js":"10","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/Login.js":"11","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/EncryptionHandler.js":"12","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/Register.js":"13","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/clientes.js":"14","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/ProtectedRoutes.js":"15","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/carrito.js":"16","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Resources.js":"17","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/userContext.js":"18"},{"size":551,"mtime":1611739497946,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1610809704165,"results":"21","hashOfConfig":"20"},{"size":2219,"mtime":1611784629614,"results":"22","hashOfConfig":"20"},{"size":3456,"mtime":1611784699178,"results":"23","hashOfConfig":"20"},{"size":10349,"mtime":1611742804354,"results":"24","hashOfConfig":"20"},{"size":18341,"mtime":1611785053321,"results":"25","hashOfConfig":"20"},{"size":12629,"mtime":1611731130841,"results":"26","hashOfConfig":"20"},{"size":13307,"mtime":1611650757734,"results":"27","hashOfConfig":"20"},{"size":12235,"mtime":1611682924232,"results":"28","hashOfConfig":"20"},{"size":11889,"mtime":1611735530257,"results":"29","hashOfConfig":"20"},{"size":3333,"mtime":1611784443313,"results":"30","hashOfConfig":"20"},{"size":740,"mtime":1611536237412,"results":"31","hashOfConfig":"20"},{"size":5656,"mtime":1611596799690,"results":"32","hashOfConfig":"20"},{"size":3635,"mtime":1611647740016,"results":"33","hashOfConfig":"20"},{"size":974,"mtime":1611594493500,"results":"34","hashOfConfig":"20"},{"size":7142,"mtime":1611748258992,"results":"35","hashOfConfig":"20"},{"size":438,"mtime":1611683140083,"results":"36","hashOfConfig":"20"},{"size":140,"mtime":1611784582660,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1n0huas",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/index.js",[],["79","80"],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/reportWebVitals.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Routing.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/navBar.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/main.js",["81"],"import React from 'react';\nimport Carousel from 'react-multi-carousel';\nimport { Container, FormControl, Alert} from 'react-bootstrap'; \nimport \"react-multi-carousel/lib/styles.css\";\nimport '../../SCSS/libreria.scss';\nimport 'react-notifications/lib/notifications.css';\nimport {NotificationManager} from 'react-notifications';\nimport NotificationContainer from 'react-notifications/lib/NotificationContainer';\n\nexport default class Main extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            libros: [],\n            terror: [],\n            ciencia_ficcion: [],\n            open: false,\n            tipo: '',\n            alerta: false,\n            msgAlerta: \"\",\n            tipoAlerta: \"success\",\n        }\n    }\n\n    createNotification(type){\n        return () => {\n          switch (type) {\n            case 'success':\n              NotificationManager.success('', 'Agregado al carrito!');\n              break;\n            case 'error':\n              NotificationManager.error('Intente mÃ¡s tarde', 'Error', 3000);\n              break;\n          }\n        }\n    };\n\n    componentDidMount(){\n        this.fetchLibros();\n        this.fetchTerror(); \n    }\n\n    onCloseHandler = (e) => {\n        this.setState({\n            open: false,\n        });\n    }\n\n    handleChange = (evt) => {\n        this.setState({\n          [evt.target.name]: evt.target.value,\n        });\n    };\n\n    fetchLibros = () => {\n        let headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        fetch(\"http://127.0.0.1:8000/libros\", {\n            method: \"GET\",\n            headers: headers,\n        })\n        .then((respuesta) => respuesta.json())\n        .then((resultado) => {\n            console.log(resultado);\n            this.setState({\n                libros: resultado,\n            });\n        }).catch((error) => console.log(\"error: \", error));\n    }\n    \n    fetchTerror = () => {\n        let headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        fetch(\"http://127.0.0.1:8000/generos/Terror\", {\n            method: \"GET\",\n            headers: headers,\n        })\n        .then((respuesta) => respuesta.json())\n        .then((resultado) => {\n            console.log(resultado);\n            this.setState({\n                terror: resultado,\n            });\n        }).catch((error) => console.log(\"error: \", error));\n    }\n\n    insertarCarrito = (item) => {\n        if(this.state.tipo !== \"\"){\n            var headers = new Headers();\n            headers.append(\"Content-Type\", \"application/json\");\n            var body = JSON.stringify({\n                email: JSON.parse(localStorage[\"appState\"]).user.email,\n                id_libro: item.id_libro,\n                tipo: this.state.tipo,\n                cantidad: 1,\n            });\n            console.log(\"A enviar: \", body);\n            fetch(\"http://localhost:8000/carrito\", {        //revisar que efectivamente sea ../insert\n                method: \"POST\",\n                headers: headers,\n                body: body\n            })\n            .then((respuesta) => respuesta.json())\n            .then((resultado) => {\n                this.setState({\n                    alerta: true,\n                    msgAlerta: resultado.status,\n                    tipoAlerta: resultado.tipo\n                })\n            console.log(resultado);    \n        });\n        } else {\n            console.log(\"Error\");\n        }\n    }\n\n    render(){\n        const responsive = {\n            superLargeDesktop: {\n              breakpoint: { max: 4000, min: 3000 },\n              items: 5\n            },\n            desktop: {\n              breakpoint: { max: 3000, min: 1024 },\n              items: 3\n            },\n            tablet: {\n              breakpoint: { max: 1024, min: 464 },\n              items: 2\n            },\n            mobile: {\n              breakpoint: { max: 464, min: 0 },\n              items: 1\n            }\n          };\n        return(\n            <main className=\"cuerpo\">\n                <div className=\"banner\">\n                    <p className=\"bottom\"><strong>Conoce un mundo<br></br>lleno de imaginacion</strong></p>\n                </div>\n                <section className=\"secciones\">\n                    {this.state.alerta === true ? (\n                      <Alert variant={this.state.tipoAlerta} onClose={() => {\n                        this.setState({\n                          alerta: false,\n                        })\n                      }} dismissible>\n                        <Alert.Heading>{this.state.msgAlerta}</Alert.Heading>\n                      </Alert>\n                    ) : null}\n                    <Container className=\"titulos\">Nuestra mejor seleccion de libros</Container>\n                    <Carousel  ssr containerClass=\"first-carousel-container\" className=\"popular\" responsive={responsive} infinite={false} swipeable={true} removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}>\n                        {this.state.libros.map((item, index) => {\n                            return (\n                                <div key={index} className=\"shadow-lg p-3 mb-5 bg-white rounded\">\n                                    <Book titulo={item.titulo} author=\"prueba\" portada={item.url} ></Book>\n                                    <FormControl as=\"select\" name=\"tipo\" onChange={this.handleChange}>\n                                        <option value=\"\">Seleccione el tipo</option>\n                                        <option disabled={!(item.precio_fisico)} value={\"Fisico\"}>Fisico ${item.precio_fisico}</option>\n                                        <option disabled={!(item.precio_electronico)} value={\"Electronico\"}>Electronico ${item.precio_electronico}</option>\n                                    </FormControl>\n                                    <button className=\"btn-agregar-carro\" onClick={() => {this.insertarCarrito(item)}}>+</button>\n                                </div>\n                            );\n                        })}\n                        <NotificationContainer/>\n                        </Carousel>\n                </section>\n                <section className=\"secciones\">\n                    <Container className=\"titulos\">Ciencia Ficcion</Container>\n                    <Carousel ssr containerClass=\"first-carousel-container\" className=\"popular\" responsive={responsive} infinite={true} swipeable={true} removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}>\n                        {this.state.libros.map((item, index) => {\n                            return (\n                                <div key={index} className=\"shadow-lg p-3 mb-5 bg-white rounded\">\n                                    <Book titulo={item.titulo} author=\"prueba\" portada={item.url} ></Book>\n                                    <FormControl as=\"select\" name=\"tipo\" onChange={this.handleChange}>\n                                        <option value=\"\">Seleccione el tipo</option>\n                                        <option disabled={!(item.precio_fisico)} value={\"Fisico\"}>Fisico ${item.precio_fisico}</option>\n                                        <option disabled={!(item.precio_electronico)} value={\"Electronico\"}>Electronico ${item.precio_electronico}</option>\n                                    </FormControl>\n                                    <button className=\"btn-agregar-carro\" onClick={() => {this.insertarCarrito(item)}}>+</button>\n                                </div>\n                            );\n                        })}\n                    </Carousel>\n                </section>\n                <section className=\"secciones\">\n                    <Container className=\"titulos\">Terror!</Container>\n                    <Carousel ssr containerClass=\"first-carousel-container\" className=\"popular\" responsive={responsive} infinite={true} swipeable={true} removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}>\n                        {this.state.terror.map((item, index) => {\n                            return (\n                                <div key={index} className=\"shadow-lg p-3 mb-5 bg-white rounded\">\n                                    <Book titulo={item.titulo} author=\"prueba\" portada={item.url} ></Book>\n                                    <FormControl as=\"select\" name=\"tipo\" onChange={this.handleChange}>\n                                        <option value=\"\">Seleccione el tipo</option>\n                                        <option disabled={!(item.precio_fisico)} value={\"Fisico\"}>Fisico ${item.precio_fisico}</option>\n                                        <option disabled={!(item.precio_electronico)} value={\"Electronico\"}>Electronico ${item.precio_electronico}</option>\n                                    </FormControl>\n                                    <button className=\"btn-agregar-carro\" onClick={() => {this.insertarCarrito(item)}}>+</button>\n                                </div>\n                            );\n                        })}\n                    </Carousel>\n                </section>\n            </main>\n        );\n    }\n}\n\nclass Book extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            titulo: props.titulo,\n            autor: props.autor,\n            portada: props.portada,\n            precio: props.precio,\n        }\n    }\n\n    render(){\n        return (\n            <div className=\"book\">\n            <div className=\"book-top\">\n                <div className=\"book-title\">{this.state.titulo}</div>\n                <div className=\"book-authors\">{this.state.autor}</div>\n            </div>\n            <div className=\"book-cover\"\n                style={{\n                    width: 128,\n                    height: 193,\n                    backgroundImage:\n                    `url('${this.state.portada}')`,\n                }}/>\n            {/*<div className=\"book-footer\">\n                <div className=\"book-price\">Precio: ${this.state.precio}</div>\n            </div>*/}\n        </div>\n        );\n    };\n};\n\n//4k -> https://images.wallpaperscraft.com/image/monstera_leaves_art_128418_3840x2400.jpg\n//HD -> https://images.wallpaperscraft.com/image/monstera_leaves_art_128418_1920x1080.jpg\n//https://wallpaperscraft.com/download/monstera_leaves_art_128418/3840x2400\n//Muy buena imagen para algun fondo!","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/libros.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/editoriales.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/autores.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/almacenes.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/librosAlmacen.js",["82"],"import React from 'react';\nimport {Container,Form, FormControl, FormLabel, Button, Alert, Row, Table} from 'react-bootstrap';\nimport '../../SCSS/Base.scss'\nimport Popup from 'reactjs-popup';\nimport { Link } from 'react-router-dom'; \n\nexport default class Almacenes extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            registros: [],\n            almacenes: [],\n            libros: [],\n            autores: [],\n            id_libro: \"\",\n            id_autor: \"\",\n            id_almacen: \"\",\n            titulo: \"\",\n            nombre_alm: \"\",\n            autor: \"\",\n            editorial: \"\",\n            isbn: \"\",\n            stock: \"\",\n            alerta: false,\n            msgAlerta: \"\",\n            tipoAlerta: \"success\",\n            open: false,\n            update: false,\n            update_message: 'Agregar libro en almacen',\n        };\n    }\n\n    componentDidMount(){\n      this.fetchAlmacenes();\n      this.getAutores();\n    };\n\n    handleChange = (evt) => {\n        this.setState({\n          [evt.target.name]: evt.target.value,\n        });\n        console.log(\"name: \", evt.target.name);\n        console.log(\"value: \", evt.target.value);\n    };\n\n    handlePopupClose = () => {\n      this.setState({\n        id_libro: \"\",\n        id_almacen: \"\",\n        titulo: \"\",\n        nombre_alm: \"\",\n        autor: \"\",\n        stock: \"\",\n        disable_localidades: true,\n        open: false,\n        update: false,\n        update_message: \"Agregar libro en almacen\",\n      });\n    }\n\n    almacenChange = (e) => {\n      this.handleChange(e);\n      this.fetchRegistros(e.target.value);\n    }\n\n    autorChange = (e) => {\n      this.handleChange(e);\n      if (e.target.value !== ''){\n        //let autor = this.state.autores.find(item => item.id_autor === e.target.value).id_autor;\n        console.log(e.target.value)\n        this.getLibrosAutores(e.target.value);\n      } else {\n        this.setState({\n          libros: [],\n        })\n      }\n    } \n\n/************************************************************************************************************************/\n    \n    getAutores = () => {\n        let headers = new Headers();\n          headers.append(\"Content-Type\", \"application/json\");\n          fetch(\"http://localhost:8000/autores\", {\n            method: \"GET\",\n            headers: headers,\n          })\n            .then((respuesta) => respuesta.json())\n            .then((resultado) => {\n              console.log(resultado);\n                this.setState({\n                  autores: resultado,\n                });\n          })\n          .catch((error) => {\n            console.log(\"error: \", error)\n            return error;\n        });\n    }\n\n    getLibrosAutores = (id_autor) => {\n      let headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        fetch(`http://localhost:8000/libros/${id_autor}`, {\n          method: \"GET\",\n          headers: headers,\n        })\n          .then((respuesta) => respuesta.json())\n          .then((resultado) => {\n            console.log(resultado);\n              this.setState({\n                libros: resultado,\n              });\n        })\n        .catch((error) => {\n          console.log(\"error: \", error)\n          return error;\n      });\n  }\n\n    fetchAlmacenes = () => {\n      let headers = new Headers();\n      headers.append(\"Content-Type\", \"application/json\");\n        fetch(\"http://localhost:8000/almacenes\", {\n          method: \"GET\",\n          headers: headers,\n      })\n      .then((respuesta) => respuesta.json())\n      .then((resultado) => {\n        console.log(\"resultado: \", resultado);\n        this.setState({\n          almacenes: resultado,\n        });\n    })\n      .catch((error) => console.log(\"error: \", error));\n    };\n\n    fetchRegistros = (id_almacen) => {\n      if(id_almacen !== ''){\n        let headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        fetch(`http://localhost:8000/librosAlmacenados/${id_almacen}`, {\n          method: \"GET\",\n          headers: headers,\n        })\n          .then((respuesta) => respuesta.json())\n          .then((resultado) => {\n            console.log(\"resultado: \", resultado);\n            this.setState({\n              registros: resultado,\n            });\n        })\n        .catch((error) => console.log(\"error: \", error));\n      } else {\n        this.setState({\n          registros: [],\n        });\n      }\n    };\n\n    addRegistro = (e) => {\n        e.preventDefault();\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        var body = JSON.stringify({\n            id_almacen: this.state.id_almacen,\n            id_libro: this.state.id_libro,\n            stock: this.state.stock,\n        })\n        console.log(\"A enviar: \",body);\n        fetch(\"http://localhost:8000/librosAlmacenados\", {        //revisar que efectivamente sea ../insert\n            method: \"POST\",\n            headers: headers,\n            body: body\n        }).then((respuesta) => respuesta.json())\n            .then((resultado) => {\n                console.log(resultado);     //para verificar que se haya recibido\n                this.setState({\n                    id_libro: \"\",\n                    id_almacen: \"\",\n                    stock: \"\",\n                    alerta: true,\n                    msgAlerta: resultado.status,\n                    tipoAlerta: \"success\",\n                    disable_localidades: true,\n                    open: false,\n                });\n                this.fetchRegistros();\n            });\n    };\n    \n    eliminarRegistro(id_almacen) {\n      var headers = new Headers();\n      headers.append(\"Content-Type\", \"application/json\");\n      fetch(`http://localhost:8000/librosAlmacen/${id_almacen}`, {        //revisar que efectivamente sea ../insert\n          method: \"DELETE\",\n          headers: headers,\n          body: JSON.stringify({})\n      }).then((respuesta) => respuesta.json())\n        .then((resultado) => {\n            console.log(resultado);    \n            this.setState({\n                id_almacen: \"\",\n                id_libro: \"\",\n                stock: \"\",\n                alerta: true,\n                msgAlerta: resultado.status,\n                tipoAlerta: \"success\",\n                disable_localidades: true,\n                open: false,\n                update: false,\n            });\n            this.fetchRegistros();\n        });\n    }\n\n/************************************************************************************************************************/\n\n    render(){\n      return(\n          <div className=\"main\">\n            <Container>\n            <h1 className=\"h1\">Libros almacenados</h1><hr></hr><br></br>\n              {\n                this.state.alerta === true ? (\n                  <Alert variant={this.state.tipoAlerta} onClose={() => {\n                    this.setState({\n                      alerta: false,\n                    })\n                  }} dismissible>\n                    <Alert.Heading>{this.state.msgAlerta}</Alert.Heading>\n                  </Alert>\n                ) : null}\n              <FormLabel>AlmacÃ©n:</FormLabel>                \n              <FormControl as=\"select\" name=\"id_almacen\" placeholder=\"Nombre de almacen\" onChange={this.almacenChange} value={this.state.id_almacen}>\n                <option value=\"\">Seleccione el almacen</option>\n                  {this.state.almacenes.map((item, index) =>{\n                    return (\n                      <option key={index} value={item.id_almacen}>{item.nombre}</option>\n                    );\n                  })\n                }\n              </FormControl>\n              <Row>\n                <Table striped bordered hover size=\"sm\" >\n                  <thead>\n                    <tr>\n                    <th className=\"align-middle\">ID</th>\n                      <th className=\"align-middle\">Titulo</th>\n                      <th className=\"align-middle\">ISBN</th>\n                      <th className=\"align-middle\">Autor</th>\n                      <th className=\"align-middle\">Editorial</th>\n                      <th className=\"align-middle\">Libros en stock</th>\n                      <th className=\"align-middle\">Eliminar</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.registros.map((item, index) => {\n                      return (\n                        <tr key={item.id_libro}>\n                          <td className=\"align-middle\">{index+1}</td>\n                          <td className=\"align-middle\">{item.titulo}</td>\n                          <td className=\"align-middle\">{item.isbn}</td>\n                          <td className=\"align-middle\">{item.autor}</td>\n                          <td className=\"align-middle\">{item.editorial}</td>\n                          <td className=\"align-middle\">{item.stock}</td>\n                          <td key=\"button2\" className=\"align-middle\">\n                            <Button onClick={() => {this.eliminarRegistro(item.id_libro)}} variant=\"danger\">Eliminar</Button>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </Row>\n            </Container>\n            <Button variant=\"info\" onClick={() => {this.setState({open: true,})}}>AÃ±adir libro en almacen</Button>\n            <Popup open={this.state.open} onClose={() => {this.handlePopupClose()}} position=\"bottom center\">\n                    <Form className = \"popup-root\" action=\"http://localhost:3001/libroAlmacen\" onSubmit={(e) => {this.state.update ?  this.editRegistro(e) : this.addRegistro(e)}}>\n                        <h2>Registro de libro en almacÃ©n</h2><hr></hr>\n                        <Container className=\"contenedor-2\">\n                            <div className=\"largos\">\n                                <FormLabel>Autor:</FormLabel>\n                                <FormControl as=\"select\" name=\"id_autor\" placeholder=\"Nombre de autor\" onChangeCapture={this.autorChange} value={this.state.id_autor}>\n                                  <option></option>\n                                  {this.state.autores.map((item, index) => {\n                                      return(\n                                        <option key={index} value={item.id_autor}>{item.nombre}</option>\n                                      );\n                                    })\n                                  }\n                                </FormControl>\n                                <FormLabel>Titulo:</FormLabel>\n                                <FormControl as=\"select\" name=\"id_libro\" placeholder=\"TÃ­tulo.\" onChangeCapture={this.handleChange} value={this.state.id_libro} required={true}>\n                                <option></option>\n                                  {this.state.libros.map((item, index) => {\n                                      return(\n                                        <option key={index} value={item.id_libro} >{item.titulo}</option>\n                                      );\n                                    })\n                                  }\n                                </FormControl>\n                                <FormLabel>Libros en stock:</FormLabel>\n                                <FormControl type=\"number\" name=\"stock\" placeholder=\"Cantidad de libros en stock\" onChange={this.handleChange} value={this.state.stock} required={true}/>\n                            </div>\n                        </Container>\n                        <Button id=\"btnSend\" type=\"submit\" variant=\"primary\" block>\n                            {this.state.update_message}\n                        </Button><br></br>\n                    </Form>\n                </Popup>\n            </div>\n        );\n    }\n}","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/Login.js",["83"],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/EncryptionHandler.js",[],["84","85"],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/Register.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/clientes.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/ProtectedRoutes.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/carrito.js",["86"],"import React from 'react';\nimport {Container, Alert, Button} from 'react-bootstrap';\nimport '../../SCSS/Base.scss'\nimport Carousel from 'react-multi-carousel';\n\nexport default class Carrito extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            libros: [],\n            historial: [],\n            libros_historial: [],\n            open: false,\n        };\n    }\n\n    componentDidMount(){\n        this.fetchLibros()\n        this.fetchHistory();\n    };\n\n    handleChange = (evt) => {\n        this.setState({\n          [evt.target.name]: evt.target.value,\n        });\n    }; \n\n    onCompra = () => {\n        let headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        let today = new Date();\n        var body = JSON.stringify({\n            email: JSON.parse(localStorage[\"appState\"]).user.email,\n            fecha_compra: today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + ' ' + today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds(),\n        });\n        console.log(body);\n        fetch(\"http://127.0.0.1:8000/cestas\", {\n            method: \"POST\",\n            headers: headers,\n            body: body,\n        })\n        .then((respuesta) => respuesta.json())\n        .then((resultado) => {\n            console.log(resultado);\n            this.fetchHistory();\n        }).catch((error) => console.log(\"error: \", error));\n    }\n\n    fetchLibros = () => {\n        let headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        var body = JSON.stringify({\n            email: JSON.parse(localStorage[\"appState\"]).user.email,\n        });\n        fetch(\"http://127.0.0.1:8000/getCarritos\", {\n            method: \"POST\",\n            headers: headers,\n            body: body,\n        })\n        .then((respuesta) => respuesta.json())\n        .then((resultado) => {\n            console.log(resultado);\n            this.setState({\n                libros: resultado,\n            });\n        }).catch((error) => console.log(\"error: \", error));\n    };\n\n    fetchHistory = () => {\n        let headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        var body = JSON.stringify({\n            email: JSON.parse(localStorage[\"appState\"]).user.email,\n        });\n        fetch(\"http://127.0.0.1:8000/history\", {\n            method: \"POST\",\n            headers: headers,\n            body: body,\n        })\n        .then((respuesta) => respuesta.json())\n        .then((resultado) => {\n            console.log(resultado);\n            this.setState({\n                historial: resultado.cestas,\n                libros_historial: resultado.libros\n            });\n        }).catch((error) => console.log(\"error: \", error));\n    }\n\n/************************************************************************************************************************/\n\n    render(){\n        const responsive = {\n            superLargeDesktop: {\n              breakpoint: { max: 4000, min: 3000 },\n              items: 5\n            },\n            desktop: {\n              breakpoint: { max: 3000, min: 1024 },\n              items: 3\n            },\n            tablet: {\n              breakpoint: { max: 1024, min: 464 },\n              items: 2\n            },\n            mobile: {\n              breakpoint: { max: 464, min: 0 },\n              items: 1\n            }\n          };\n      return(\n          <Container className=\"main\">\n            <h1 className=\"h1\">Carrito de compras</h1><hr></hr>\n            {this.state.alerta === true ? (\n                  <Alert variant={this.state.tipoAlerta} onClose={() => {\n                    this.setState({\n                      alerta: false,\n                    })\n                  }} dismissible>\n                    <Alert.Heading>{this.state.msgAlerta}</Alert.Heading>\n                  </Alert>\n                ) : null}\n            {this.state.libros.map((item, index) => {\n                return (\n                    <Container key={index} className=\"carrito\">\n                            <Book titulo={item.titulo} author=\"prueba\" precio={item.precio_fisico} portada={item.url} \n                                anio_publicacion={item.anio_publicacion} descripcion={item.descripcion}\n                                nombre={item.nombre} apellidos={item.apellidos}></Book>\n                    </Container>\n                );\n            })}\n            <Button id=\"btn-generar-pago\" type=\"button\" onClick={this.onCompra} variant=\"primary\" block>\n                Generar pago\n            </Button><br></br><br></br>\n            <h1 className=\"h1\">Historial de compras</h1>\n            <hr></hr>\n            {this.state.historial.map((item, index) => {\n                    return (\n                        <Container className=\"container_history\">\n                            <h3>Compra de {item.fecha_compra}</h3>\n                            <Carousel key={index} ssr containerClass=\"first-carousel-container\" responsive={responsive} infinite={true} swipeable={false} removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}>\n                            {this.state.libros_historial.map((item, index) => {\n                                return(\n                                    <img className=\"history\" src={item.url}></img>\n                                );\n                            })}\n                            </Carousel>\n                        </Container>\n                    );\n                })}\n            </Container>\n        );\n    }\n}\n\nclass Book extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            titulo: props.titulo,\n            autor: props.autor,\n            portada: props.portada,\n            anio_publicacion: props.anio_publicacion,\n            descripcion: props.descripcion,\n            precio: props.precio,\n            nombre: props.nombre,\n            apellidos: props.apellidos\n        }\n    }\n\n    render(){\n        return (\n            <Container className=\"libro-descrip\">\n                <div className=\"libro-cover\"\n                    style={{\n                        width: 128,\n                        height: 190,\n                        backgroundImage:\n                        `url('${this.state.portada}')`,\n                }}/>\n                <div className=\"libro-contenido\">\n                    <div className=\"libro-title\">{this.state.titulo}</div><br></br>\n                    <div className=\"libro-mas\">\n                        <p>\n                            Autor: {this.state.nombre} {this.state.apellidos}<br></br>\n                            AÃ±o de publicaciÃ³n: {this.state.anio_publicacion}<br></br>\n                            DescripciÃ³n: {this.state.descripcion}<br></br>\n                        </p>\n                    </div>\n                    <button className=\"btn-eliminar\">Eliminar</button>\n                </div>\n            </Container>\n        );\n    };\n};\n\n//<div className=\"libro-mas\">{this.state.autor}{this.state.anio_publicacion}{this.state.autor}{this.state.descripcion}</div>\n                    \n","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Resources.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/userContext.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":27,"column":11,"nodeType":"93","messageId":"94","endLine":34,"endColumn":12},{"ruleId":"95","severity":1,"message":"96","line":5,"column":10,"nodeType":"97","messageId":"98","endLine":5,"endColumn":14},{"ruleId":"95","severity":1,"message":"99","line":60,"column":13,"nodeType":"97","messageId":"98","endLine":60,"endColumn":17},{"ruleId":"87","replacedBy":"100"},{"ruleId":"89","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":144,"column":37,"nodeType":"104","endLine":144,"endColumn":77},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.",["105"],["106"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]