[{"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/index.js":"1","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/reportWebVitals.js":"2","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Routing.js":"3","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/navBar.js":"4","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/main.js":"5","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/libros.js":"6","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/editoriales.js":"7","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/autores.js":"8","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/almacenes.js":"9","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/librosAlmacen.js":"10","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/Login.js":"11","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/EncryptionHandler.js":"12","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/Register.js":"13","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/clientes.js":"14","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/ProtectedRoutes.js":"15","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/carrito.js":"16","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/userContext.js":"17"},{"size":551,"mtime":1611739497946,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1610809704165,"results":"20","hashOfConfig":"19"},{"size":2215,"mtime":1611852450826,"results":"21","hashOfConfig":"19"},{"size":3456,"mtime":1611784699178,"results":"22","hashOfConfig":"19"},{"size":13379,"mtime":1611855024684,"results":"23","hashOfConfig":"19"},{"size":18550,"mtime":1611854724083,"results":"24","hashOfConfig":"19"},{"size":12629,"mtime":1611731130841,"results":"25","hashOfConfig":"19"},{"size":13307,"mtime":1611650757734,"results":"26","hashOfConfig":"19"},{"size":12235,"mtime":1611682924232,"results":"27","hashOfConfig":"19"},{"size":11889,"mtime":1611735530257,"results":"28","hashOfConfig":"19"},{"size":3333,"mtime":1611785399013,"results":"29","hashOfConfig":"19"},{"size":740,"mtime":1611536237412,"results":"30","hashOfConfig":"19"},{"size":5656,"mtime":1611596799690,"results":"31","hashOfConfig":"19"},{"size":3635,"mtime":1611647740016,"results":"32","hashOfConfig":"19"},{"size":775,"mtime":1611852706158,"results":"33","hashOfConfig":"19"},{"size":9000,"mtime":1611857212248,"results":"34","hashOfConfig":"19"},{"size":88,"mtime":1611785639456,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1n0huas",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/index.js",[],["74","75"],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/reportWebVitals.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Routing.js",["76"],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/navBar.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/main.js",["77","78"],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/libros.js",["79"],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/editoriales.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/autores.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/almacenes.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/librosAlmacen.js",["80"],"import React from 'react';\nimport {Container,Form, FormControl, FormLabel, Button, Alert, Row, Table} from 'react-bootstrap';\nimport '../../SCSS/Base.scss'\nimport Popup from 'reactjs-popup';\nimport { Link } from 'react-router-dom'; \n\nexport default class Almacenes extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            registros: [],\n            almacenes: [],\n            libros: [],\n            autores: [],\n            id_libro: \"\",\n            id_autor: \"\",\n            id_almacen: \"\",\n            titulo: \"\",\n            nombre_alm: \"\",\n            autor: \"\",\n            editorial: \"\",\n            isbn: \"\",\n            stock: \"\",\n            alerta: false,\n            msgAlerta: \"\",\n            tipoAlerta: \"success\",\n            open: false,\n            update: false,\n            update_message: 'Agregar libro en almacen',\n        };\n    }\n\n    componentDidMount(){\n      this.fetchAlmacenes();\n      this.getAutores();\n    };\n\n    handleChange = (evt) => {\n        this.setState({\n          [evt.target.name]: evt.target.value,\n        });\n        console.log(\"name: \", evt.target.name);\n        console.log(\"value: \", evt.target.value);\n    };\n\n    handlePopupClose = () => {\n      this.setState({\n        id_libro: \"\",\n        id_almacen: \"\",\n        titulo: \"\",\n        nombre_alm: \"\",\n        autor: \"\",\n        stock: \"\",\n        disable_localidades: true,\n        open: false,\n        update: false,\n        update_message: \"Agregar libro en almacen\",\n      });\n    }\n\n    almacenChange = (e) => {\n      this.handleChange(e);\n      this.fetchRegistros(e.target.value);\n    }\n\n    autorChange = (e) => {\n      this.handleChange(e);\n      if (e.target.value !== ''){\n        //let autor = this.state.autores.find(item => item.id_autor === e.target.value).id_autor;\n        console.log(e.target.value)\n        this.getLibrosAutores(e.target.value);\n      } else {\n        this.setState({\n          libros: [],\n        })\n      }\n    } \n\n/************************************************************************************************************************/\n    \n    getAutores = () => {\n        let headers = new Headers();\n          headers.append(\"Content-Type\", \"application/json\");\n          fetch(\"http://localhost:8000/autores\", {\n            method: \"GET\",\n            headers: headers,\n          })\n            .then((respuesta) => respuesta.json())\n            .then((resultado) => {\n              console.log(resultado);\n                this.setState({\n                  autores: resultado,\n                });\n          })\n          .catch((error) => {\n            console.log(\"error: \", error)\n            return error;\n        });\n    }\n\n    getLibrosAutores = (id_autor) => {\n      let headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        fetch(`http://localhost:8000/libros/${id_autor}`, {\n          method: \"GET\",\n          headers: headers,\n        })\n          .then((respuesta) => respuesta.json())\n          .then((resultado) => {\n            console.log(resultado);\n              this.setState({\n                libros: resultado,\n              });\n        })\n        .catch((error) => {\n          console.log(\"error: \", error)\n          return error;\n      });\n  }\n\n    fetchAlmacenes = () => {\n      let headers = new Headers();\n      headers.append(\"Content-Type\", \"application/json\");\n        fetch(\"http://localhost:8000/almacenes\", {\n          method: \"GET\",\n          headers: headers,\n      })\n      .then((respuesta) => respuesta.json())\n      .then((resultado) => {\n        console.log(\"resultado: \", resultado);\n        this.setState({\n          almacenes: resultado,\n        });\n    })\n      .catch((error) => console.log(\"error: \", error));\n    };\n\n    fetchRegistros = (id_almacen) => {\n      if(id_almacen !== ''){\n        let headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        fetch(`http://localhost:8000/librosAlmacenados/${id_almacen}`, {\n          method: \"GET\",\n          headers: headers,\n        })\n          .then((respuesta) => respuesta.json())\n          .then((resultado) => {\n            console.log(\"resultado: \", resultado);\n            this.setState({\n              registros: resultado,\n            });\n        })\n        .catch((error) => console.log(\"error: \", error));\n      } else {\n        this.setState({\n          registros: [],\n        });\n      }\n    };\n\n    addRegistro = (e) => {\n        e.preventDefault();\n        var headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        var body = JSON.stringify({\n            id_almacen: this.state.id_almacen,\n            id_libro: this.state.id_libro,\n            stock: this.state.stock,\n        })\n        console.log(\"A enviar: \",body);\n        fetch(\"http://localhost:8000/librosAlmacenados\", {        //revisar que efectivamente sea ../insert\n            method: \"POST\",\n            headers: headers,\n            body: body\n        }).then((respuesta) => respuesta.json())\n            .then((resultado) => {\n                console.log(resultado);     //para verificar que se haya recibido\n                this.setState({\n                    id_libro: \"\",\n                    id_almacen: \"\",\n                    stock: \"\",\n                    alerta: true,\n                    msgAlerta: resultado.status,\n                    tipoAlerta: \"success\",\n                    disable_localidades: true,\n                    open: false,\n                });\n                this.fetchRegistros();\n            });\n    };\n    \n    eliminarRegistro(id_almacen) {\n      var headers = new Headers();\n      headers.append(\"Content-Type\", \"application/json\");\n      fetch(`http://localhost:8000/librosAlmacen/${id_almacen}`, {        //revisar que efectivamente sea ../insert\n          method: \"DELETE\",\n          headers: headers,\n          body: JSON.stringify({})\n      }).then((respuesta) => respuesta.json())\n        .then((resultado) => {\n            console.log(resultado);    \n            this.setState({\n                id_almacen: \"\",\n                id_libro: \"\",\n                stock: \"\",\n                alerta: true,\n                msgAlerta: resultado.status,\n                tipoAlerta: \"success\",\n                disable_localidades: true,\n                open: false,\n                update: false,\n            });\n            this.fetchRegistros();\n        });\n    }\n\n/************************************************************************************************************************/\n\n    render(){\n      return(\n          <div className=\"main\">\n            <Container>\n            <h1 className=\"h1\">Libros almacenados</h1><hr></hr><br></br>\n              {\n                this.state.alerta === true ? (\n                  <Alert variant={this.state.tipoAlerta} onClose={() => {\n                    this.setState({\n                      alerta: false,\n                    })\n                  }} dismissible>\n                    <Alert.Heading>{this.state.msgAlerta}</Alert.Heading>\n                  </Alert>\n                ) : null}\n              <FormLabel>Almacén:</FormLabel>                \n              <FormControl as=\"select\" name=\"id_almacen\" placeholder=\"Nombre de almacen\" onChange={this.almacenChange} value={this.state.id_almacen}>\n                <option value=\"\">Seleccione el almacen</option>\n                  {this.state.almacenes.map((item, index) =>{\n                    return (\n                      <option key={index} value={item.id_almacen}>{item.nombre}</option>\n                    );\n                  })\n                }\n              </FormControl>\n              <Row>\n                <Table striped bordered hover size=\"sm\" >\n                  <thead>\n                    <tr>\n                    <th className=\"align-middle\">ID</th>\n                      <th className=\"align-middle\">Titulo</th>\n                      <th className=\"align-middle\">ISBN</th>\n                      <th className=\"align-middle\">Autor</th>\n                      <th className=\"align-middle\">Editorial</th>\n                      <th className=\"align-middle\">Libros en stock</th>\n                      <th className=\"align-middle\">Eliminar</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.registros.map((item, index) => {\n                      return (\n                        <tr key={item.id_libro}>\n                          <td className=\"align-middle\">{index+1}</td>\n                          <td className=\"align-middle\">{item.titulo}</td>\n                          <td className=\"align-middle\">{item.isbn}</td>\n                          <td className=\"align-middle\">{item.autor}</td>\n                          <td className=\"align-middle\">{item.editorial}</td>\n                          <td className=\"align-middle\">{item.stock}</td>\n                          <td key=\"button2\" className=\"align-middle\">\n                            <Button onClick={() => {this.eliminarRegistro(item.id_libro)}} variant=\"danger\">Eliminar</Button>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </Row>\n            </Container>\n            <Button variant=\"info\" onClick={() => {this.setState({open: true,})}}>Añadir libro en almacen</Button>\n            <Popup open={this.state.open} onClose={() => {this.handlePopupClose()}} position=\"bottom center\">\n                    <Form className = \"popup-root\" action=\"http://localhost:3001/libroAlmacen\" onSubmit={(e) => {this.state.update ?  this.editRegistro(e) : this.addRegistro(e)}}>\n                        <h2>Registro de libro en almacén</h2><hr></hr>\n                        <Container className=\"contenedor-2\">\n                            <div className=\"largos\">\n                                <FormLabel>Autor:</FormLabel>\n                                <FormControl as=\"select\" name=\"id_autor\" placeholder=\"Nombre de autor\" onChangeCapture={this.autorChange} value={this.state.id_autor}>\n                                  <option></option>\n                                  {this.state.autores.map((item, index) => {\n                                      return(\n                                        <option key={index} value={item.id_autor}>{item.nombre}</option>\n                                      );\n                                    })\n                                  }\n                                </FormControl>\n                                <FormLabel>Titulo:</FormLabel>\n                                <FormControl as=\"select\" name=\"id_libro\" placeholder=\"Título.\" onChangeCapture={this.handleChange} value={this.state.id_libro} required={true}>\n                                <option></option>\n                                  {this.state.libros.map((item, index) => {\n                                      return(\n                                        <option key={index} value={item.id_libro} >{item.titulo}</option>\n                                      );\n                                    })\n                                  }\n                                </FormControl>\n                                <FormLabel>Libros en stock:</FormLabel>\n                                <FormControl type=\"number\" name=\"stock\" placeholder=\"Cantidad de libros en stock\" onChange={this.handleChange} value={this.state.stock} required={true}/>\n                            </div>\n                        </Container>\n                        <Button id=\"btnSend\" type=\"submit\" variant=\"primary\" block>\n                            {this.state.update_message}\n                        </Button><br></br>\n                    </Form>\n                </Popup>\n            </div>\n        );\n    }\n}","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/Login.js",["81"],"import React from 'react';\n//Importar el archivo que maneja la encriptacion de datos que se enviaran al lado del servidor!.\nimport '../../SCSS/Login.scss';\nimport { UserContext } from '../userContext';\n\nexport default class Login extends React.Component{\n  static contextType = UserContext;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        redirect: null,\n        id_cliente: 0,\n        email: \"\",\n        contrasena: \"\",\n        nombre: '',\n        isLoggedIn: false,\n        formSubmiting: false,\n    }; \n  } \n\n  componentDidMount(){\n    let state = localStorage[\"appState\"];\n    if(state) {\n      let AppState = JSON.parse(state);\n      this.setState({\n        isLoggedIn: AppState.isLoggedIn, \n        email: AppState.user.email,\n        id_cliente: AppState.user.id_cliente,\n        nombre: AppState.user.nombre,\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"login-box\">\n        <h2>Login</h2>\n        <form onSubmit={this.handleSubmit} action=\"http://localhost:8000/login\">\n          <label htmlFor=\"email\">Correo Electronico</label>\n          <input value={this.state.email} onChange={this.handleChange} name=\"email\" type=\"text\" placeholder=\"Ingrese correo electronico\"></input>\n          <label htmlFor=\"password\">Contraseña</label>\n          <input value={this.state.contrasena} onChange={this.handleChange} name=\"contrasena\" type=\"password\" placeholder=\"Ingrese la contraseña\"></input>\n          <input type=\"submit\" value=\"Log In\"></input>\n          <a href=\"/\">Olvidaste tu contraseña?</a><br></br>\n          <a href=\"/register\">No tienes una cuenta?</a>\n        </form>\n      </div>\n    );\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { user, setUser } = this.context;\n    let headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    let body = JSON.stringify({\n      email: this.state.email, \n      contrasena: this.state.contrasena\n    });\n    console.log(body);\n    fetch(\"http://localhost:8000/login\", {\n      method: 'POST',\n      headers: headers,\n      body: body,\n    })\n    .then((respuesta) => respuesta.json())\n    .then((resultado) => {\n      console.log(resultado);\n      this.setState({\n          redirect: resultado.redirect,\n          nombre: resultado.nombre,\n          isLoggedIn: resultado.success,\n          id_cliente: resultado.id_cliente,\n      });\n      if(resultado.status_code === 1){\n        setUser(true);\n        let appState = {\n          isLoggedIn: this.state.isLoggedIn,\n          user: {\n            email: resultado.email,\n            nombre: resultado.nombre,\n            id_cliente: resultado.id_cliente,\n          }\n        };\n        localStorage[\"appState\"] = JSON.stringify(appState);\n      } else {\n        setUser(false);\n        let appState = {\n          isLoggedIn: false,\n          user: {\n            email: \"\",\n            nombre: \"\",\n            id_cliente: resultado.id_cliente,\n          }\n        };\n        localStorage[\"appState\"] = JSON.stringify(appState);\n        this.setState({\n          isLoggedIn: appState.isLoggedIn,\n        })\n      }\n      this.props.history.push(resultado.redirect, resultado);\n    })\n    .catch((err) => console.log(\"Error: \", err));\n  };\n\n};\n","/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/EncryptionHandler.js",[],["82","83"],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/Register.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/clientes.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/ProtectedRoutes.js",[],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/Vistas/carrito.js",["84","85","86","87"],"/media/panchis/ExtraHDD/Taller Ing. Software/Libreria_Online/cliente/src/Components/userContext.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":20,"column":3,"nodeType":"94","endLine":20,"endColumn":12,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":29,"column":11,"nodeType":"98","messageId":"99","endLine":36,"endColumn":12},{"ruleId":"100","severity":1,"message":"101","line":269,"column":13,"nodeType":"102","endLine":269,"endColumn":71},{"ruleId":"103","severity":1,"message":"104","line":92,"column":9,"nodeType":"105","messageId":"106","endLine":92,"endColumn":20},{"ruleId":"107","severity":1,"message":"108","line":5,"column":10,"nodeType":"94","messageId":"109","endLine":5,"endColumn":14},{"ruleId":"107","severity":1,"message":"110","line":60,"column":13,"nodeType":"94","messageId":"109","endLine":60,"endColumn":17},{"ruleId":"88","replacedBy":"111"},{"ruleId":"90","replacedBy":"112"},{"ruleId":"107","severity":1,"message":"113","line":21,"column":13,"nodeType":"94","messageId":"109","endLine":21,"endColumn":19},{"ruleId":"114","severity":1,"message":"115","line":157,"column":76,"nodeType":"116","messageId":"117","endLine":157,"endColumn":78},{"ruleId":"118","severity":1,"message":"119","line":158,"column":33,"nodeType":"120","messageId":"121","endLine":162,"endColumn":34},{"ruleId":"107","severity":1,"message":"122","line":194,"column":16,"nodeType":"94","messageId":"109","endLine":194,"endColumn":25},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setUser'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","Identifier",["125"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-dupe-keys","Duplicate key 'portada_url'.","ObjectExpression","unexpected","no-unused-vars","'Link' is defined but never used.","unusedVar","'user' is assigned a value but never used.",["123"],["124"],"'status' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'setStatus' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},"Add dependencies array: []",{"range":"128","text":"129"},[885,885],", []"]